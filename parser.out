Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUALS expression
Rule 2     statement -> expression
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression TIMES expression
Rule 6     expression -> expression DIVIDE expression
Rule 7     expression -> FRAC expression MIDDLE expression END
Rule 8     expression -> SIN LPAREN expression RPAREN
Rule 9     expression -> MINUS expression
Rule 10    expression -> LPAREN expression RPAREN
Rule 11    expression -> NUMBER
Rule 12    expression -> PI
Rule 13    expression -> NAME

Terminals, with rules where they appear

DIVIDE               : 6
END                  : 7
EQUALS               : 1
FRAC                 : 7
LPAREN               : 8 10
MIDDLE               : 7
MINUS                : 4 9
NAME                 : 1 13
NUMBER               : 11
PI                   : 12
PLUS                 : 3
RPAREN               : 8 10
SIN                  : 8
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 5 5 6 6 7 7 8 9 10
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUALS expression
    (2) statement -> . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    NAME            shift and go to state 2
    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7

    expression                     shift and go to state 8
    statement                      shift and go to state 5

state 1

    (7) expression -> FRAC . expression MIDDLE expression END
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 11

state 2

    (1) statement -> NAME . EQUALS expression
    (13) expression -> NAME .

    EQUALS          shift and go to state 12
    PLUS            reduce using rule 13 (expression -> NAME .)
    MINUS           reduce using rule 13 (expression -> NAME .)
    TIMES           reduce using rule 13 (expression -> NAME .)
    DIVIDE          reduce using rule 13 (expression -> NAME .)
    $end            reduce using rule 13 (expression -> NAME .)


state 3

    (11) expression -> NUMBER .

    PLUS            reduce using rule 11 (expression -> NUMBER .)
    MINUS           reduce using rule 11 (expression -> NUMBER .)
    TIMES           reduce using rule 11 (expression -> NUMBER .)
    DIVIDE          reduce using rule 11 (expression -> NUMBER .)
    $end            reduce using rule 11 (expression -> NUMBER .)
    MIDDLE          reduce using rule 11 (expression -> NUMBER .)
    RPAREN          reduce using rule 11 (expression -> NUMBER .)
    END             reduce using rule 11 (expression -> NUMBER .)


state 4

    (8) expression -> SIN . LPAREN expression RPAREN

    LPAREN          shift and go to state 13


state 5

    (0) S' -> statement .



state 6

    (10) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 14

state 7

    (12) expression -> PI .

    PLUS            reduce using rule 12 (expression -> PI .)
    MINUS           reduce using rule 12 (expression -> PI .)
    TIMES           reduce using rule 12 (expression -> PI .)
    DIVIDE          reduce using rule 12 (expression -> PI .)
    $end            reduce using rule 12 (expression -> PI .)
    MIDDLE          reduce using rule 12 (expression -> PI .)
    RPAREN          reduce using rule 12 (expression -> PI .)
    END             reduce using rule 12 (expression -> PI .)


state 8

    (2) statement -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 16


state 9

    (9) expression -> MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 19

state 10

    (13) expression -> NAME .

    PLUS            reduce using rule 13 (expression -> NAME .)
    MINUS           reduce using rule 13 (expression -> NAME .)
    TIMES           reduce using rule 13 (expression -> NAME .)
    DIVIDE          reduce using rule 13 (expression -> NAME .)
    $end            reduce using rule 13 (expression -> NAME .)
    MIDDLE          reduce using rule 13 (expression -> NAME .)
    RPAREN          reduce using rule 13 (expression -> NAME .)
    END             reduce using rule 13 (expression -> NAME .)


state 11

    (7) expression -> FRAC expression . MIDDLE expression END
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    MIDDLE          shift and go to state 20
    PLUS            shift and go to state 15
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 16


state 12

    (1) statement -> NAME EQUALS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 21

state 13

    (8) expression -> SIN LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 22

state 14

    (10) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 23
    PLUS            shift and go to state 15
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 16


state 15

    (3) expression -> expression PLUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 24

state 16

    (6) expression -> expression DIVIDE . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 25

state 17

    (4) expression -> expression MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 26

state 18

    (5) expression -> expression TIMES . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 27

state 19

    (9) expression -> MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 9 (expression -> MINUS expression .)
    MINUS           reduce using rule 9 (expression -> MINUS expression .)
    TIMES           reduce using rule 9 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 9 (expression -> MINUS expression .)
    $end            reduce using rule 9 (expression -> MINUS expression .)
    MIDDLE          reduce using rule 9 (expression -> MINUS expression .)
    RPAREN          reduce using rule 9 (expression -> MINUS expression .)
    END             reduce using rule 9 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 16 ]


state 20

    (7) expression -> FRAC expression MIDDLE . expression END
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . FRAC expression MIDDLE expression END
    (8) expression -> . SIN LPAREN expression RPAREN
    (9) expression -> . MINUS expression
    (10) expression -> . LPAREN expression RPAREN
    (11) expression -> . NUMBER
    (12) expression -> . PI
    (13) expression -> . NAME

    FRAC            shift and go to state 1
    SIN             shift and go to state 4
    MINUS           shift and go to state 9
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 3
    PI              shift and go to state 7
    NAME            shift and go to state 10

    expression                     shift and go to state 28

state 21

    (1) statement -> NAME EQUALS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 16


state 22

    (8) expression -> SIN LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 29
    PLUS            shift and go to state 15
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 16


state 23

    (10) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    MIDDLE          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 10 (expression -> LPAREN expression RPAREN .)


state 24

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 3 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 3 (expression -> expression PLUS expression .)
    $end            reduce using rule 3 (expression -> expression PLUS expression .)
    MIDDLE          reduce using rule 3 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression PLUS expression .)
    END             reduce using rule 3 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 16

  ! TIMES           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 17 ]


state 25

    (6) expression -> expression DIVIDE expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 6 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 6 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 6 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 6 (expression -> expression DIVIDE expression .)
    MIDDLE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIVIDE expression .)
    END             reduce using rule 6 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 16 ]


state 26

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 4 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 4 (expression -> expression MINUS expression .)
    $end            reduce using rule 4 (expression -> expression MINUS expression .)
    MIDDLE          reduce using rule 4 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression MINUS expression .)
    END             reduce using rule 4 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 16

  ! TIMES           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 17 ]


state 27

    (5) expression -> expression TIMES expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 5 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 5 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 5 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 5 (expression -> expression TIMES expression .)
    $end            reduce using rule 5 (expression -> expression TIMES expression .)
    MIDDLE          reduce using rule 5 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 5 (expression -> expression TIMES expression .)
    END             reduce using rule 5 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 16 ]


state 28

    (7) expression -> FRAC expression MIDDLE expression . END
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    END             shift and go to state 30
    PLUS            shift and go to state 15
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 16


state 29

    (8) expression -> SIN LPAREN expression RPAREN .

    PLUS            reduce using rule 8 (expression -> SIN LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (expression -> SIN LPAREN expression RPAREN .)
    TIMES           reduce using rule 8 (expression -> SIN LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> SIN LPAREN expression RPAREN .)
    $end            reduce using rule 8 (expression -> SIN LPAREN expression RPAREN .)
    MIDDLE          reduce using rule 8 (expression -> SIN LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> SIN LPAREN expression RPAREN .)
    END             reduce using rule 8 (expression -> SIN LPAREN expression RPAREN .)


state 30

    (7) expression -> FRAC expression MIDDLE expression END .

    PLUS            reduce using rule 7 (expression -> FRAC expression MIDDLE expression END .)
    MINUS           reduce using rule 7 (expression -> FRAC expression MIDDLE expression END .)
    TIMES           reduce using rule 7 (expression -> FRAC expression MIDDLE expression END .)
    DIVIDE          reduce using rule 7 (expression -> FRAC expression MIDDLE expression END .)
    $end            reduce using rule 7 (expression -> FRAC expression MIDDLE expression END .)
    MIDDLE          reduce using rule 7 (expression -> FRAC expression MIDDLE expression END .)
    RPAREN          reduce using rule 7 (expression -> FRAC expression MIDDLE expression END .)
    END             reduce using rule 7 (expression -> FRAC expression MIDDLE expression END .)

